server {
    listen 443 ssl;
    server_name         solidvillage.com;
    ssl_certificate     /etc/config/keys/server.crt;
    ssl_certificate_key /etc/config/keys/server.key;

    access_log /dev/stdout;
    error_log /dev/stderr;

    location /_next/webpack-hmr {
        proxy_pass http://permithanko:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;

    }

    location /node_modules {
        proxy_pass http://permithanko:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        if ($request_method = 'OPTIONS') {
	    add_header 'Access-Control-Allow-Credentials' 'true' always;
	    add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
	    add_header 'Access-Control-Max-Age' '86400' always;
            return 204;
        }
        if ($request_method ~* "(POST|PUT|DELETE|GET)") {
	    more_clear_headers 'Access-Control-*';

	    add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
	    add_header 'Access-Control-Max-Age' '86400' always;
        }
    }

    location /api/permit {
        proxy_pass http://permithanko:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        if ($request_method = 'OPTIONS') {
	    add_header 'Access-Control-Allow-Credentials' 'true' always;
	    add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
	    add_header 'Access-Control-Max-Age' '86400' always;
            return 204;
        }
        if ($request_method ~* "(POST|PUT|DELETE|GET)") {
	    more_clear_headers 'Access-Control-*';

	    add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
	    add_header 'Access-Control-Max-Age' '86400' always;
        }
    }

    location /notes {
        proxy_pass http://permithanko:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        if ($request_method = 'OPTIONS') {
	    add_header 'Access-Control-Allow-Credentials' 'true' always;
	    add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
	    add_header 'Access-Control-Max-Age' '86400' always;
            return 204;
        }
        if ($request_method ~* "(POST|PUT|DELETE|GET)") {
	    more_clear_headers 'Access-Control-*';

	    add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
	    add_header 'Access-Control-Max-Age' '86400' always;
        }
    }

    location /_next {
        proxy_pass http://permithanko:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        if ($request_method = 'OPTIONS') {
	    add_header 'Access-Control-Allow-Credentials' 'true' always;
	    add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
	    add_header 'Access-Control-Max-Age' '86400' always;
            return 204;
        }
        if ($request_method ~* "(POST|PUT|DELETE|GET)") {
	    more_clear_headers 'Access-Control-*';

	    add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
	    add_header 'Access-Control-Max-Age' '86400' always;
        }
    }

    location /permithanko {
	rewrite ^/permithanko(.*)$ /$1 break;
        proxy_pass http://permithanko:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        if ($request_method = 'OPTIONS') {
	    add_header 'Access-Control-Allow-Credentials' 'true' always;
	    add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
	    add_header 'Access-Control-Max-Age' '86400' always;
            return 204;
        }
        if ($request_method ~* "(POST|PUT|DELETE|GET)") {
	    more_clear_headers 'Access-Control-*';

	    add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
	    add_header 'Access-Control-Max-Age' '86400' always;
        }
    }

    location /hanko {
	rewrite ^/hanko(.*)$ $1 break;
        proxy_pass http://hanko:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        if ($request_method = 'OPTIONS') {
	    add_header 'Access-Control-Allow-Credentials' 'true' always;
	    add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
	    add_header 'Access-Control-Max-Age' '86400' always;
            return 204;
        }
        if ($request_method ~* "(POST|PUT|DELETE|GET)") {
	    more_clear_headers 'Access-Control-*';

	    add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
	    add_header 'Access-Control-Max-Age' '86400' always;
        }
    }

    location /elements {
	rewrite ^/elements(.*)$ $1 break;
        proxy_pass http://elements:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        if ($request_method = 'OPTIONS') {
	    add_header 'Access-Control-Allow-Credentials' 'true' always;
	    add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
	    add_header 'Access-Control-Max-Age' '86400' always;
            return 204;
        }
        if ($request_method ~* "(POST|PUT|DELETE|GET)") {
	    more_clear_headers 'Access-Control-*';

	    add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
	    add_header 'Access-Control-Max-Age' '86400' always;
        }
    }

    location / {
        proxy_pass http://quickstart:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

	if ($request_method = 'OPTIONS') {
	    add_header 'Access-Control-Allow-Credentials' 'true' always;
	    add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
	    add_header 'Access-Control-Max-Age' '86400' always;
            return 204;
        }
        if ($request_method ~* "(POST|PUT|DELETE|GET)") {
	    more_clear_headers 'Access-Control-*';

	    add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
	    add_header 'Access-Control-Max-Age' '86400' always;
        }
    }
}

server {
    listen 444 ssl;
    server_name         solidvillage.com:444;
    ssl_certificate     /etc/config/keys/server.crt;
    ssl_certificate_key /etc/config/keys/server.key;

    location / {
        proxy_pass http://hanko:8001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

	if ($request_method = 'OPTIONS') {
	    add_header 'Access-Control-Allow-Credentials' 'true' always;
	    add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
	    add_header 'Access-Control-Max-Age' '86400' always;
            return 204;
        }
        if ($request_method ~* "(POST|PUT|DELETE|GET)") {
	    more_clear_headers 'Access-Control-*';

	    add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' '*' always;
            add_header 'Access-Control-Allow-Headers' 'access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
	    add_header 'Access-Control-Max-Age' '86400' always;
        }
   }
}
